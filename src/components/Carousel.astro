---
import { twMerge } from "tailwind-merge";
import { Image } from "astro:assets";

import { getImages } from "@scripts/utils";

interface Props {
  photos: string[];
  class?: string;
}

const { photos, class: classes } = Astro.props;
const allImages = getImages();
photos.forEach((path: string) => {
  if (!(path in allImages)) {
    throw new Error(`Image not found: ${path}`);
  }
});
const totalPhotos = photos.length;
---

<div class={twMerge("relative", classes)}>
  <ul
    id="carousel"
    class="flex gap-2 overflow-x-scroll no-scrollbars snap-mandatory snap-x w-full"
    data-total={totalPhotos}
  >
    {
      photos.map((path: string) => (
        <li class="snap-center desktop:h-[calc(100vh-48px)] flex-shrink-0 w-full">
          <Image
            src={allImages[path]()}
            alt="Photo of piece"
            class="rounded-sm object-cover object-center h-full user-select: none"
          />
        </li>
      ))
    }
  </ul>
  {
    totalPhotos > 1 && (
      <div class="absolute bottom-3 right-3 bg-stone-50/75 text-stone-600 px-2 rounded-lg flex items-center">
        <span id="curr-item">01</span>/
        <span>{totalPhotos.toString().padStart(2, "0")}</span>
      </div>
    )
  }
</div>

<script>
  import { initCarousel } from "@scripts/carousel";

  const carouselEl = document.getElementById("carousel");
  const labelEl = document.getElementById("curr-item");

  if (carouselEl && labelEl) {
    const totalPhotos = Number(carouselEl.getAttribute("data-total"));
    if (totalPhotos > 1) {
      initCarousel(carouselEl, labelEl);
    }
  }
</script>
